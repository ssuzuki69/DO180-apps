
http://todoapi-fntskp-application.apps.ap46.prod.nextcle.com/todo/

apps.ap46.prod.nextcle.com
oc logs <podName> [-c <containerName>]
podman run -d --name official-httpd -p 8180:80 quay.io/redhattraining/httpd-parent
podman exec -it official-httpd /bin/bash

token:
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
0206
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

source /usr/local/etc/ocp4.config
oc login -u ${RHT_OCP4_DEV_USER} -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
oc new-project ${RHT_OCP4_DEV_USER}-application
podman login registry.redhat.io
podman login quay.io -u ${RHT_OCP4_QUAY_USER}

# build & tag & push
podman build --layers=false -t do180/apache .
podman tag do180-mysql-80-rhel8 quay.io/${RHT_OCP4_QUAY_USER}/do180-mysql-80-rhel8
podman push do180-mysql-80-rhel8 quay.io/${RHT_OCP4_QUAY_USER}/do180-mysql-80-rhel8

oc process -f quote-php-template.json -p RHT_OCP4_QUAY_USER=${RHT_OCP4_QUAY_USER} | oc create -f -
oc expose service quote-php

oc new-project ${RHT_OCP4_DEV_USER}-nodejs
oc start-build bc/nodejs-hello

podman logs -f troubleshoot-container

oc new-app --name nodejs-dev \
 https://github.com/${RHT_OCP4_GITHUB_USER}/DO180-apps#troubleshoot-review \
 -i nodejs:12 --context-dir=nodejs-app --build-env \
 npm_config_registry=http://${RHT_OCP4_NEXUS_SERVER}/repository/npm-proxy

git commit -am "Fixed Express release"
git push
oc start-build bc/nodejs-hello

#### DO180 Lab9 ######
podman build --layers=false -t nexus .
cd /home/student/DO180/labs/comprehensive-review
cd deploy/local
./run-persistent.sh
podman rm -f inspiring_poincare
podman login -u ${RHT_OCP4_QUAY_USER} quay.io
podman push localhost/nexus:latest quay.io/${RHT_OCP4_QUAY_USER}/nexus:latest
cd ~/DO180/labs/comprehensive-review/deploy/openshift
oc login -u ${RHT_OCP4_DEV_USER}> -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
oc new-project ${RHT_OCP4_DEV_USER}-review

export RHT_OCP4_QUAY_USER
envsubst < resources/nexus-deployment.yaml > | oc create -f -
oc get pods
oc expose svc/nexus
oc get route -o yaml

##### DO280 ######
oc login -u kubeadmin -p ${RHT_OCP4_KUBEADM_PASSWD} https://api.ocp4.example.com:6443
# Operator Podのログ追跡
oc get pod -n openshift-image-registry
oc logs --tail 3 -n openshift-image-registry cluster-image-registry-operator-564bd5dd8f-s46bz

# Kubeletのログ追跡
oc adm node-logs --tail 1 -u kubelet master01
systemctl status kubelet

# openvswitch Pod が実⾏されていることを確認
crictl ps --name openvswitch
oc get events

skopeo inspect docker://registry.redhat.io/rhel8/postgresq-13:1

# registry.redhat.io/rhel8/postgresql-12:1-43 にあるコンテナーイメージを使⽤して、新しいデータベースのデプロイ
oc new-app --name postgresql-persistent --docker-image registry.redhat.io/rhel8/postgresql-13:1-7 \
-e POSTGRESQL_USER=redhat -e POSTGRESQL_PASSWORD=redhat123 -e POSTGRESQL_DATABASE=persistentdb



